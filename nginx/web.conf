# You may add here your # server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen 80 default_server; # listen for ipv4; this line is default and implied

	root /home/web;
	index index.html; # index.php;

	charset utf-8;
	gzip on;

	# Make site accessible from http://localhost/
	server_name localhost 192.168.0.100 yyfearth.com www.yyfearth.com home.yyfearth.com;

	location ~ /downs {
		autoindex	on;
		autoindex_exact_size	off;
		autoindex_localtime	on;
	}
	
	resolver	127.0.0.1;
	
	location / {
		if ($uri ~ (/|\./(html?|css|js|json|png|gif|jpe?g))$) {
			break;
		}
		try_files $uri $uri.html $uri/ /404.html?$args;
		#autoindex	on;
		#autoindex_exact_size	off;
		#autoindex_localtime	on;
	}

	location /favicon.ico {
		expires max;
	}

	# weather svc
	location /gapi {
		proxy_pass	http://www.google.com/ig/api;
	}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# knight rider
	#location /knightrider/ {
	#	add_header	Cache-Control	public;
	#	expires	1s;
	#}

	location ~ /([Kk]night[\-_]?(?:[Rr]ider)?|[Rr]ider)/? {
		rewrite .* https://$host/knightrider/;
	}

	# the counter burger
	location /TheCounterBurger {
		proxy_set_header	Host $host;
		proxy_set_header	X-Real-IP	$remote_addr;
		proxy_pass	http://192.168.0.111;
		proxy_cache cache;
		proxy_cache_key $uri$is_args$args;
		proxy_cache_methods GET HEAD POST;
		proxy_cache_valid 200 202 301 302 1h;
		proxy_cache_valid 201 10s;
		proxy_cache_valid any 1m;
		proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
		proxy_ignore_headers   Expires Cache-Control;
		add_header	Cache-Control	private;
		if ($request_uri ~ "Content/images/") {
			expires max;
			break;
		}
		if ($request_uri ~ "\.(js|css)$") {
			expires 1d;
			break;
		}
		expires	6h;
	}
	location ~ /(burger|thecounterburger)/?$ {
		rewrite .* /TheCounterBurger/ permanent;
	}

	# purge cache
	#location ~ /purge(/.*) {
	#	allow 127.0.0.1;
	#	deny all;
	#	proxy_cache_purge cache $1$is_args$args;
	#}

	# node.js
	#location /svc/ {
	#	proxy_set_header	Host $host;
	#	proxy_pass	http://localhost:8888/; # end with /
	#}
	
	#location ~ /(.*?)/svc(/|$) {
	#	rewrite /(.*?)/svc/?(.*) /svc/$1/$2 last;
	#}

	# php
	# location ~ \.php$ {
	# 	fastcgi_pass	127.0.0.1:9000;
	# 	fastcgi_index	index.php;
	# 	fastcgi_param	SCRIPT_FILENAME $document_root$fastcgi_script_name;
	# 	fastcgi_split_path_info	^(.+\.php)(.*)$;
	# 	fastcgi_param	PATH_INFO	$fastcgi_path_info;
	# 	include	fastcgi_params;
	# }

	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
	#
	#location ~ \.php$ {
	#	proxy_pass http://127.0.0.1;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_pass 127.0.0.1:9000;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ \.(ht|conf|sh|svn|git|hg|cfg|coffee)$ {
		deny all;
	}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
server {
	listen 443 default;

	ssl on;
	ssl_certificate /etc/ssl/private/server.crt;
	ssl_certificate_key /etc/ssl/private/server.key;

	ssl_session_timeout 5m;

	ssl_protocols SSLv3 TLSv1;
	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
	ssl_prefer_server_ciphers on;


	root /home/web;
	index index.html;

	location / {
		try_files $uri $uri/ /index.html;
	}
	
	location /favicon.ico {
		expires max;
	}
	
	# weather svc
	location /gapi {
		proxy_pass	http://www.google.com/ig/api;
	}
	
	# knight rider
	location /knightrider/ {
		
		add_header	Cache-Control	public;
		expires	1s;
	}
	location ~ /[Kk]night((_?R|_r)ider)?/?$ {
		rewrite .* /knightrider/ permanent;
	}
	

}

server {
	listen	80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

	charset utf-8;

	server_name iis.yyfearth.com sjsu.yyfearth.com;

	location / {
		proxy_set_header	Host $host;
		proxy_set_header	X-Real-IP	$remote_addr;
		proxy_pass	http://192.168.0.111;
		proxy_cache cache;
		proxy_cache_valid any 1h;
	}
}

